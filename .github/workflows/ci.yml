
name: CI
on:
  push:
    branches: [ master ]
    tags:
      - '[0-9]+.[0-9]+.[0-9]+' # Trigger on tags like v1.0.0, v1.0.1, etc.
  pull_request:
    branches: [ master ]


jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry flake8 pytest
      - name: PYPI API Token
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
      - name: Build package
        run: |
          poetry build
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          python -m poetry run flake8 . --exclude .venv --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          python -m poetry run flake8 . --exclude .venv --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  release:
    concurrency: release
    permissions:
      contents: write
      id-token: write
    needs: quality
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout code
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: steps.release.outputs.released == 'true'

      - name: Publish package distributions to GitHub Releases
        uses: python-semantic-release/upload-to-gh-release@main
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}